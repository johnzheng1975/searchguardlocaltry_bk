Step 1: Install sg
sudo /usr/share/elasticsearch/bin/elasticsearch-plugin install -b com.floragunn:search-guard-6:6.2.4-23.0

Step 2: Go to correct path
cd /usr/share/elasticsearch/plugins/search-guard-6/tools

Step 3: Install demo configuration
sudo chmod 755 ./install_demo_configuration.sh
sudo  ./install_demo_configuration.sh
### Success
### Execute this script now on all your nodes and then start all nodes
### Search Guard will be automatically initialized.
### If you like to change the runtime configuration 
### change the files in ../sgconfig and execute: 
sudo "/usr/share/elasticsearch/plugins/search-guard-6/tools/sgadmin.sh" -cd "/usr/share/elasticsearch/plugins/search-guard-6/sgconfig" -icl -key "/etc/elasticsearch/kirk-key.pem" -cert "/etc/elasticsearch/kirk.pem" -cacert "/etc/elasticsearch/root-ca.pem" -nhnv
### or run ./sgadmin_demo.sh
### To use the Search Guard Configuration GUI see http://docs.search-guard.com/v6/configuration-gui
### To access your Search Guard secured cluster open https://<hostname>:<HTTP port> and log in with admin/admin.
### (Ignore the SSL certificate warning because we installed self-signed demo certificates)

Option 1: Restart ES and Run sgadmin.sh 
sudo service elasticsearch restart;
ubuntu@ip-172-31-20-187:/usr/share/elasticsearch/plugins/search-guard-6/tools$ sudo "/usr/share/elasticsearch/plugins/search-guard-6/tools/sgadmin.sh" -cd "/usr/share/elasticsearch/plugins/search-guard-6/sgconfig" -icl -key "/etc/elasticsearch/kirk-key.pem" -cert "/etc/elasticsearch/kirk.pem" -cacert "/etc/elasticsearch/root-ca.pem" -nhnv
WARNING: JAVA_HOME not set, will use /usr/bin/java
Search Guard Admin v6
Will connect to localhost:9300 ... done
Elasticsearch Version: 6.2.4
Search Guard Version: 6.2.4-23.0
Connected as CN=kirk,OU=client,O=client,L=test,C=de
Contacting elasticsearch cluster 'elasticsearch' and wait for YELLOW clusterstate ...
Clustername: searchguard_demo
Clusterstate: YELLOW
Number of nodes: 1
Number of data nodes: 1
searchguard index already exists, so we do not need to create one.
Populate config from /usr/share/elasticsearch/plugins/search-guard-6/sgconfig/
Will update 'sg/config' with /usr/share/elasticsearch/plugins/search-guard-6/sgconfig/sg_config.yml 
   SUCC: Configuration for 'config' created or updated
Will update 'sg/roles' with /usr/share/elasticsearch/plugins/search-guard-6/sgconfig/sg_roles.yml 
   SUCC: Configuration for 'roles' created or updated
Will update 'sg/rolesmapping' with /usr/share/elasticsearch/plugins/search-guard-6/sgconfig/sg_roles_mapping.yml 
   SUCC: Configuration for 'rolesmapping' created or updated
Will update 'sg/internalusers' with /usr/share/elasticsearch/plugins/search-guard-6/sgconfig/sg_internal_users.yml 
   SUCC: Configuration for 'internalusers' created or updated
Will update 'sg/actiongroups' with /usr/share/elasticsearch/plugins/search-guard-6/sgconfig/sg_action_groups.yml 
   SUCC: Configuration for 'actiongroups' created or updated
Done with success

Option 2: 
ubuntu@ip-172-31-20-187:/usr/share/elasticsearch/plugins/search-guard-6/tools$ ./sgadmin_demo.sh
WARNING: JAVA_HOME not set, will use /usr/bin/java
Search Guard Admin v6
Will connect to localhost:9300 ... done
Elasticsearch Version: 6.2.4
Search Guard Version: 6.2.4-23.0
Connected as CN=kirk,OU=client,O=client,L=test,C=de
Contacting elasticsearch cluster 'elasticsearch' and wait for YELLOW clusterstate ...
Clustername: searchguard_demo
Clusterstate: YELLOW
Number of nodes: 1
Number of data nodes: 1
searchguard index already exists, so we do not need to create one.
Populate config from /usr/share/elasticsearch/plugins/search-guard-6/sgconfig/
Will update 'sg/config' with /usr/share/elasticsearch/plugins/search-guard-6/sgconfig/sg_config.yml 
   SUCC: Configuration for 'config' created or updated
Will update 'sg/roles' with /usr/share/elasticsearch/plugins/search-guard-6/sgconfig/sg_roles.yml 
   SUCC: Configuration for 'roles' created or updated
Will update 'sg/rolesmapping' with /usr/share/elasticsearch/plugins/search-guard-6/sgconfig/sg_roles_mapping.yml 
   SUCC: Configuration for 'rolesmapping' created or updated
Will update 'sg/internalusers' with /usr/share/elasticsearch/plugins/search-guard-6/sgconfig/sg_internal_users.yml 
   SUCC: Configuration for 'internalusers' created or updated
Will update 'sg/actiongroups' with /usr/share/elasticsearch/plugins/search-guard-6/sgconfig/sg_action_groups.yml 
   SUCC: Configuration for 'actiongroups' created or updated
Done with success

Option 3:
Input https://localhost:9200/ in Chrome, input username/password admin/admin
You can find correct message from es.

Option 4:
curl -k https://localhost:9200 -u admin:admin

Step 4: Configure kibana (Refer: https://sematext.com/blog/elasticsearch-kibana-security-search-guard/)
add below: /etc/kibana/kibana.yml
elasticsearch.url: "https://localhost:9200"
elasticsearch.ssl.verificationMode: none
elasticsearch.username: "kibanaserver"
elasticsearch.password: "kibanaserver"

Step 5: Add user/password/... in /etc/fluent/fluent.conf
    scheme https
    ssl_verify false
    user admin
    password admin
    ssl_version TLSv1_2

Step 6: You can find EFK all works successfully!

Step 7: Install search guard kibana plugin 
#wget https://search.maven.org/remotecontent?filepath=com/floragunn/search-guard-kibana-plugin/6.2.4-15/search-guard-kibana-plugin-6.2.4-15.zip
#mv remotecontent\?filepath\=com%2Ffloragunn%2Fsearch-guard-kibana-plugin%2F6.2.4-15%2Fsearch-guard-kibana-plugin-6.2.4-15.zip  search-guard-kibana-plugin-6.2.4-15.zip
#/usr/share/kibana/bin/kibana-plugin install search-guard-kibana-plugin-6.2.4-15.zip
sudo /usr/share/kibana/bin/kibana-plugin install https://search.maven.org/remotecontent?filepath=com/floragunn/search-guard-kibana-plugin/6.2.4-15/search-guard-kibana-plugin-6.2.4-15.zip

Step 8: Add more lines in kibana configure file, like below:
#xpack.security.enabled: false
searchguard.auth.type: "basicauth"
elasticsearch.url: "https://localhost:9200"
elasticsearch.ssl.verificationMode: none
elasticsearch.username: "kibanaserver"
elasticsearch.password: "kibanaserver"

Step 9: access kibana, after log in with admin/admin, you can view users admin UI. and after send logs to fluentd, it will be transferred to kibana successfully!

Step 10: Add new user/role/role mappings
* sg_mykibanauser - sg_mykibanarole,sg_kibana_user. Note that the new role should map CLUSTER_COMPOSITE_OPS cluster permissions, index: newf1*, docu: *, search.
* sg_mykibanauser2 - sg_mykibanarole2,sg_kibana_user. Note that the new role should map CLUSTER_COMPOSITE_OPS cluster permissions, index: newf2*, docu: *, search.
Refer to: https://docs.search-guard.com/resources/presentations/01_SG_Documents_installation.pdf

Step 11: Add search for diff two users.
Log in with different users, you can find each user can see all indexs/searches, however, he can only used his specific index
my_kibanauser/my_kibanauser
my_kibanauser2/my_kibanauser2

Step 12: Disable enterprise license. Refer: https://docs.search-guard.com/latest/search-guard-community-edition
Action: Change elasticsearch.yml, searchguard.enterprise_modules_enabled: false; Then restart elastic search. (And kibana/fluentd)
Check: curl https://localhost:9200/_searchguard/license -k  -u admin:admin;  Should show: license_requried: false;

Step 13: View EFK function, all works fine. 
However, the user/role/rolemapping cannot be seen in kibana now.

